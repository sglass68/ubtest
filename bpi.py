# Generated by labman from dut bpi

import tbot
from tbot.machine import board, channel, connector, linux
from tbot.tc import git, shell, uboot
from flash import Flash
from sdwire import Sdwire
from ykush import Ykush

class BpiUBootBuilder(uboot.UBootBuilder):
    name = "bpi"
    defconfig = "Bananapi_defconfig"
    toolchain = "armv7-a"

class Bpi(
    connector.ConsoleConnector,
    board.PowerControl,
    board.Board,
    Flash,
    Sdwire,
    Ykush,
):
    name = "bpi"
    desc = "Banana Pi"
    console_uart = "/dev/ttyusb_port15"
    raw_device = "/dev/sdcard7"
    sdwire_serial = "sdwireda4"
    ykush_port = "2"
    ykush_serial = "YK18511"

    ether_mac = "None"

    def poweron(self) -> None:
        """Procedure to turn power on."""
        self.sdwire_dut()
        self.ykush_reset()

    def poweroff(self) -> None:
        """Procedure to turn power off."""
        self.ykush_off()
        self.sdwire_ts()

    def connect(self, mach) -> channel.Channel:
        """Connect to the board's serial interface."""
        
        return mach.open_channel("picocom", "-q", "-b", "115200",
                                 self.console_uart)

    def flash(self, repo: git.GitRepository) -> None:
        self.ykush_off()
        self.sdwire_ts()
        self.flash_sunxi(repo)
        self.sdwire_dut()


class BpiUBoot(
    board.Connector,
    board.UBootAutobootIntercept,
    board.UBootShell,
):
    prompt = "=> "
    build = BpiUBootBuilder()


class BpiLinux(
    board.Connector,
    board.LinuxBootLogin,
    linux.Bash,
):
    username = "None"
    password = "None"


BOARD = Bpi
UBOOT = BpiUBoot
LINUX = BpiLinux